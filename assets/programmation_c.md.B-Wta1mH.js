import{_ as i,c as a,o as n,ah as e}from"./chunks/framework.dSlXG4V0.js";const E=JSON.parse('{"title":"Langage C","description":"","frontmatter":{"head":[["meta",{"property":"og:title","content":"Programmation langage C"},{"property":"og:description","content":" Programmation PostgreSQL en langage C"},{"property":"og:type","content":"article"}],["link",{"rel":"canonical","href":"https://5432.fr/programmation/c"}],["meta",{"property":"og:url","content":"https://5432.fr/programmation/c"}],["meta",{"property":"og:image","content":"https://5432.fr/postgresql-200x200.png"}]]},"headers":[],"relativePath":"programmation/c.md","filePath":"programmation/c.md","lastUpdated":1757145130000}'),t={name:"programmation/c.md"};function l(p,s,h,r,k,o){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="langage_c" tabindex="-1">Langage C <a class="header-anchor" href="#langage_c" aria-label="Permalink to “Langage C”">​</a></h1><p>PostgreSQL étant écrit en <strong>C</strong>, il existe par conséquent une bibliothèque native qui se nomme <a href="https://docs.postgresql.fr/current/libpq.html" target="_blank" rel="noreferrer">libpq</a></p><h2 id="language_c_libpq" tabindex="-1">Bibliothèque libpq <a class="header-anchor" href="#language_c_libpq" aria-label="Permalink to “Bibliothèque libpq”">​</a></h2><p>La bibliothèque pour le language C se nomme <a href="https://docs.postgresql.fr/current/libpq.html" target="_blank" rel="noreferrer">libpq</a> .</p><p>D&#39;autres langages de programmation on également leur bibliothèque mais les principales s&#39;appuie sur la libpq via des wrappers</p><p>Pour commencer à travailler avec libpq dans votre programme C, vous devez importer les bibliothèques nécessaires.</p><p>Ouvrez votre fichier de programme C et incluez les bibliothèques suivantes en haut du fichier</p><div class="language-C"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdlib.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;libpq-fe.h&gt;</span></span></code></pre></div><h3 id="etablir-une-connexion" tabindex="-1">Etablir une connexion <a class="header-anchor" href="#etablir-une-connexion" aria-label="Permalink to “Etablir une connexion”">​</a></h3><p>Pour établir une connexion à la base de données PostgreSQL à l&#39;aide de libpq, nous utiliserons la fonction PQconnectdb().</p><p>Cette fonction ouvre une nouvelle connexion à la base de données en fonction des paramètres fournis dans la chaîne <strong>conninfo</strong>.</p><p>La chaîne <strong>conninfo</strong> contient un ou plusieurs paramètres au format <strong>keyword=value</strong>, séparés par des espaces. Vous pouvez utiliser des paramètres par défaut en transmettant une chaîne vide ou spécifier des paramètres personnalisés selon vos besoins.</p><p>Pour inclure une valeur nulle ou une valeur avec des espaces, placez-la entre guillemets simples (keyword=&#39;value&#39;). Si nécessaire, échappez les guillemets simples dans la valeur à l&#39;aide d&#39;une barre oblique inverse (&#39;). Les espaces autour du signe égal sont facultatifs.</p><p>Il est important de noter que la fonction PQconnectdb() renvoie toujours un pointeur d&#39;objet PGconn non nul, sauf si la mémoire est insuffisante pour allouer l&#39;objet.</p><p>Pendant le processus de connexion, vous pouvez vérifier l&#39;état de la connexion à l&#39;aide de la fonction PQstatus().</p><p>Si l&#39;état est <strong>CONNECTION_BAD</strong>, la procédure de connexion a échoué.</p><p>A l&#39;inverse, si le statut est <strong>CONNECTION_OK</strong>, la connexion est prête.</p><p>Pour fermer correctement la connexion et libérer la mémoire utilisée par l&#39;objet PGconn, appelez la fonction <a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PQFINISH" target="_blank" rel="noreferrer">PQfinish()</a>.</p><p>Même si la tentative de connexion au backend échoue (comme indiqué par PQstatus), il est essentiel d&#39;appeler <a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PQFINISH" target="_blank" rel="noreferrer">PQfinish()</a> pour libérer la mémoire allouée. Après avoir appelé <a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PQFINISH" target="_blank" rel="noreferrer">PQfinish()</a>, le pointeur <strong>PGconn</strong> ne doit plus être utilisé.</p><p>Ci-dessous un exemple de programme qui se connect au serveur de base de données, et affiche les informations de connexions</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdlib.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;libpq-fe.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> argc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">argv</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Tuto utilisation de la libpq </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Connexion à la base de données</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // la chaine conninfo contient les mots clés et les valeurs séparés par des espaces.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conninfo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;dbname=votre_nom_db user=utilisateur password=mot_de_passe host=localhost port=5432&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Creation de la connexion</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   PGconn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">conn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PQconnectdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conninfo);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Vérification si la connexion s&#39;est faite correctement</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQstatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CONNECTION_OK) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Si echec de connxion, nous imprimons les messages d&#39;erreur et liberont les ressources</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Erreur lors de la connexion au serveur de base de données: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQerrorMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // On ferme la connexion</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      PQfinish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // On sort du programme avec un code 1 pour indiquer une erreur</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // La connexion a été établie avec succès, nous affichons les informations du serveur de base de données</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Connection établie</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hote: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQhost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nom de la DB: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // Fermeture de la connexion et libération de la mémoire</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   PQfinish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Dans ce code, remplacez votre_nom_dn, utilisateur et mot_de_passe par les valeurs appropriées pour votre configuration PostgreSQL. Le programme imprime les détails de la connexion, tels que le port, l&#39;hôte et le nom de la base de données, pour confirmer la connexion réussie.</p><p>Enfin, la connexion est fermée à l&#39;aide de <a href="https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PQFINISH" target="_blank" rel="noreferrer">PQfinish()</a> pour libérer la mémoire allouée à l&#39;objet PGconn.</p><h3 id="executer-une-requete-sql" tabindex="-1">Executer une requête SQL <a class="header-anchor" href="#executer-une-requete-sql" aria-label="Permalink to “Executer une requête SQL”">​</a></h3><p>Une fois la connexion à la base de données établie, nous pouvons procéder à l&#39;exécution des requêtes à l&#39;aide de libpq.</p><p>La fonction principale que nous utiliserons pour l&#39;exécution des requêtes est <a href="https://www.postgresql.org/docs/current/libpq-exec.html#LIBPQ-EXEC-MAIN" target="_blank" rel="noreferrer">PQexec()</a>.</p><p>La fonction <a href="https://www.postgresql.org/docs/current/libpq-exec.html#LIBPQ-EXEC-MAIN" target="_blank" rel="noreferrer">PQexec()</a> est utilisée pour soumettre une requête à PostgreSQL et attendre le résultat.</p><p>Elle renvoie un pointeur PGresult, qui encapsule le résultat de la requête renvoyé par le backend de la base de données.</p><p>Dans la plupart des cas, un pointeur non nul est renvoyé, sauf dans des situations telles que des conditions de manque de mémoire ou des erreurs critiques empêchant l&#39;envoi de la requête au backend.</p><p>Si un pointeur nul est renvoyé, il doit être traité comme un résultat <strong>PGRES_FATAL_ERROR</strong>.</p><p>Pour obtenir plus d&#39;informations sur l&#39;erreur, vous pouvez utiliser la fonction <a href="https://www.postgresql.org/docs/current/libpq-exec.html#LIBPQ-PQRESULTERRORMESSAGE" target="_blank" rel="noreferrer">PQerrorMessage()</a>.</p><p>La structure PGresult doit être conservée comme une abstraction lors de l&#39;utilisation du résultat de la requête. Il est recommandé d&#39;utiliser des fonctions d&#39;accès au lieu de référencer directement les champs de la structure <strong>PGresult</strong>, car les champs peuvent changer dans les futures versions de libpq.</p><p>Après avoir exécuté une requête à l&#39;aide de <a href="https://www.postgresql.org/docs/current/libpq-exec.html#LIBPQ-EXEC-MAIN" target="_blank" rel="noreferrer">PQexec()</a>, vous pouvez vérifier l&#39;état du résultat à l&#39;aide de PQresultStatus().</p><p>Les états de résultat possibles incluent:</p><ul><li><strong>PGRES_EMPTY_QUERY</strong>: la chaîne de requête envoyée par le backend était vide.</li><li><strong>PGRES_COMMAND_OK</strong>: la commande s&#39;est terminée avec succès, mais aucune donnée n&#39;a été renvoyée.</li><li><strong>PGRES_TUPLES_OK</strong>: la requête s&#39;est exécutée avec succès et a renvoyé des tuples (lignes).</li><li><strong>PGRES_COPY_OUT</strong>: le transfert de données (copie sortante) depuis le serveur a commencé.</li><li><strong>PGRES_COPY_IN</strong>: le transfert de données (copie entrante) vers le serveur a commencé.</li><li><strong>PGRES_BAD_RESPONSE</strong>: la réponse du serveur n&#39;a pas été comprise.</li><li><strong>PGRES_NONFATAL_ERROR</strong>: une erreur non fatale s&#39;est produite lors de l&#39;exécution de la requête.</li><li><strong>PGRES_FATAL_ERROR</strong>: une erreur fatale s&#39;est produite lors de l&#39;exécution de la requête.</li></ul><p>Si le statut du résultat de la requête est <strong>PGRES_TUPLES_OK</strong>, vous pouvez utiliser diverses fonctions pour récupérer des informations sur les tuples renvoyés.</p><p>Voici quelques fonctions utiles:</p><ul><li><strong>PQntuples()</strong> : renvoie le nombre de tuples (lignes) dans le résultat de la requête.</li><li><strong>PQnfields()</strong> : renvoie le nombre de champs (attributs) dans chaque tuple du résultat de la requête.</li><li><strong>PQfname()</strong> : renvoie le nom du champ (attribut) associé à l&#39;index de champ donné. Les indices de champ commencent à 0.</li><li><strong>PQftype()</strong> : renvoie le type de champ associé à l&#39;index de champ donné. L&#39;entier renvoyé représente un codage interne du type. Les indices de champ commencent à 0.</li><li><strong>PQgetvalue()</strong> : renvoie la valeur d&#39;un champ spécifique (attribut) dans un tuple du résultat de la requête. Les indices de tuple et de champ commencent à 0.</li></ul><p>Ces fonctions fournissent des fonctionnalités essentielles pour récupérer et travailler avec les résultats de la requête.</p><div class="language-C"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Requête a exécuter</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">char</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">query </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SELECT * FROM ma_table&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Envoyer la requête et récupérer les résultats</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PGresult </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">res </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PQexec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn, query);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Vérifier l&#39;état de résultat de la requête</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ExecStatusType resStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PQresultStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Convertir l&#39;état en message texte et &#39;l&#39;afficher</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Etat requete: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQresStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(resStatus));</span></span></code></pre></div><p>Vérification de ce que retourne la requête</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (resStatus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PGRES_TUPLES_OK) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //Si on ne récupère pas de ligne, on affiche et un message et on termine la connexion</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Erreur lors de l&#39;execution de la requête: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQerrorMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    PQclear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    PQfinish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    exit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// On recupère des données, on affiche un message</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Requête exécutée avec succès</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>Ensuite on affiche le résultat sur la console.</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// On récupère le nombre de lignes et de colonne</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rows </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PQntuples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cols </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PQnfields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nombre de lignes: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rows);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Nombre de colonnes: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cols);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// On affiche les noms de colonnes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cols; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQfname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res, i));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// On affiche le contenue des lignes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rows; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cols; j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQgetvalue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res, i, j));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>On n&#39;oublie pas de liberer les ressources et de fermer la connexion</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQclear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PQfinish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(conn);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Pour compiler et exécuter votre code, suivez les étapes ci-dessou:</p><ol><li>Assurez-vous que le répertoire bin de PostgreSQL est inclus dans le chemin de vos variables d&#39;environnement. Cela permet au compilateur de localiser les bibliothèques et exécutables PostgreSQL nécessaires.</li><li>Ouvrez le terminal ou l&#39;invite de commande et accédez au répertoire où se trouve votre fichier C.</li><li>Utilisez la commande suivante pour compiler votre code:</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monprogramme.c</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> monprogramme</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;path/to/postgres/include&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;path/to/postgres/lib&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lpq</span></span></code></pre></div><p>Si la compilation s&#39;est déroulé correctement, vous devriez avoir un executable <strong>monprogramme</strong> dans votre dossier</p><p>Que vous pourrez lancer comme ceci:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./monprogramme</span></span></code></pre></div><p>Pour plus de maintenabilité, vous pourrez privilégié la creation d&#39;un fichier <a href="https://fr.wikipedia.org/wiki/Make" target="_blank" rel="noreferrer">Makefile</a>.</p><h2 id="bibiotheque-ecpg" tabindex="-1">Bibiothèque ECPG <a class="header-anchor" href="#bibiotheque-ecpg" aria-label="Permalink to “Bibiothèque ECPG”">​</a></h2><p><a href="https://www.postgresql.org/docs/current/app-ecpg.html" target="_blank" rel="noreferrer">ECPG</a> est un préprocesseur, qui vous permet d&#39;embarquer du SQL directement dans votre programme en C</p><p>Vos fichiers C embarquant du SQL auront pour extension <strong>pgc</strong>.</p><p>Chaque instructions utilisants du SQL commencera par <strong>EXEC SQL</strong>.</p><p>Lors de la compilation, les fichiers ayant l&#39;extension pgc seront traduit en fichier C et seront ensuite compilés</p><p>Ci-dessous un exemple tiré de la documentation utilisant de multiples connexions</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;stdio.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXEC SQL BEGIN DECLARE SECTION;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    char</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> nomdb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EXEC SQL END DECLARE SECTION;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL CONNECT TO basetest1 AS con1 USER utilisateurtest;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SELECT pg_catalog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;search_path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); EXEC SQL COMMIT;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL CONNECT TO basetest2 AS con2 USER utilisateurtest;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SELECT pg_catalog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;search_path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); EXEC SQL COMMIT;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL CONNECT TO basetest3 AS con3 USER utilisateurtest;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SELECT pg_catalog.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;search_path&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); EXEC SQL COMMIT;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* Cette requête serait exécuté dans la dernière base ouverte &quot;basetest3&quot;. */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SELECT </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">current_database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() INTO :nomdb;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;courante=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> (devrait être basetest3)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nomdb);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* Utiliser &quot;AT&quot; pour exécuter une requête dans &quot;basetest2&quot; */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL AT con2 SELECT </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">current_database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() INTO :nomdb;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;courante=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> (devrait être basetest2)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nomdb);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* Basculer la connexion courante à &quot;basetest1&quot;. */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SET CONNECTION con1;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL SELECT </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">current_database</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() INTO :nomdb;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;courante=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> (devrait être basetest1)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nomdb);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    EXEC SQL DISCONNECT ALL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,60)])])}const g=i(t,[["render",l]]);export{E as __pageData,g as default};
